1. 锚定行首尾：
	行首：^  比如：^hello
	行尾：$  比如：hello$
	空行：^$
2. 锚定词首词尾：
	词首：\<，\b;
	词尾：\>，\b;
	\B,与\b相反，匹配非边界
3. 锚定连续字符串：
	\{x\}:表示之前的字符联系出现x次会被匹配到
	\{x,\}：表示之前字符至少出现x次
	\{,y\}：表示之前字符最多出现y次
	\{x,y\}:表示之前的字符至少出现x次，最多出现y次，都可以被匹配到
		找出两个连续a：grep "a\{2\}" <fileName>
		找出只包含两个连续a：grep "\<a\{2\}\>" <fileName>
		找出包含2~4个a：grep "a\{2,4\}" <fileName>
	\?：匹配前面的字符0次或1次
	\+：匹配前面的字符至少出现1次
	
4. .与*
	.:任意单个字符：
		a. 表示 a后面跟一个任意字符; 
		a.. 表示 a后面跟任意两个字符
	*：表示之前的字符出现任意次数
		e*f,则 ef eef eeef都会被匹配到

	.与*结合：任意长度的任意字符：.*结合
		比如：a.* 表示 a后面跟任意长度任意字符。
5. [[::]]
	[[:alpha:]] -- [a-zA-Z] 任意大小写字母
		a后面匹配任意三个字母：grep "a[[:alpha:]]\{3\}" <fileName> ----》只包含字母，不含特殊符号.
	[[:lower:]] == [a-z] 任意字母但只能小写
	[[:upper:]] == [A-Z] 任意字母但只能大写
	[[:digit:]] == [0-9] 0~9之间任意单个数字
	[[:alnum:]] 任意数字或字母
	[[:space:]] 任意空白字符，包括空格，tab键
	[[:punct:]] 表示任意标点
	[ ] 表示指定范围内的任意单个字符
		比如[aS#f2]，表示： a 或 S 或 # 或 f 或 2,都可以匹配
	[^ ] 表示指定范围外的任意单个字符
		比如[^aS#f2]，表示： 既不 a 也不 S 也不 # 或 f 也不 2,才能匹配
	\d:需与 -P 连用。表示：任意单个0到9的数字
	\D:需与 -P 连用。表示：任意单个非数字字符
	\t:需与 -P 连用。表示：匹配单个横向制表符(相当于一个tab键)
	\s:需与 -P 连用。表示：匹配单个空白字符，包括空格，tab键
	\S:需与 -P 连用。表示：匹配单个非空白字符
6. 分组：\(\)	可嵌套
	\(hello\)\{2\}：检索hello出现两次字符串
	\(ab\(ef\)\{2\}\)\{2\}：检索出现abefefabefef的字符串
7. 向后引用：\1 (分组为前提)
	\(H.\{4\}\) world \1:从下列中找出world前后相同的字符串
		Hello world Hello		√
		Hiiii world Hiiii		√
		Hello world Hiiii		×
	从上述例子来理解向后引用：\n 表示引用整个正则中第n个分组所匹配到的结果
	*嵌套组合：以分组左侧确定分组顺序

***********在扩展正则表达式中，3、6/7中的\可以去掉，不过书写格式变为 grep -E***********